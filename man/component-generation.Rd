% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R, R/components.R, R/components-camera.R,
%   R/components-intclust.R, R/components-nontarget.R, R/components-ramclustr.R
\name{component-generation}
\alias{component-generation}
\alias{generateComponents,featureGroups-method}
\alias{generateComponents}
\alias{generateComponentsCAMERA,featureGroups-method}
\alias{generateComponentsIntClust,featureGroups-method}
\alias{generateComponentsNontarget,featureGroups-method}
\alias{generateComponentsRAMClustR,featureGroups-method}
\title{Grouping feature groups in components}
\usage{
\S4method{generateComponents}{featureGroups}(fGroups, algorithm, ...)

\S4method{generateComponentsCAMERA}{featureGroups}(
  fGroups,
  ionization,
  onlyIsotopes = FALSE,
  minSize = 2,
  relMinReplicates = 0.5,
  extraOpts = NULL
)

\S4method{generateComponentsIntClust}{featureGroups}(
  fGroups,
  method = "complete",
  metric = "euclidean",
  normFunc = max,
  average = TRUE,
  maxTreeHeight = 1,
  deepSplit = TRUE,
  minModuleSize = 1
)

\S4method{generateComponentsNontarget}{featureGroups}(
  fGroups,
  ionization,
  rtRange = c(-120, 120),
  mzRange = c(5, 120),
  elements = c("C", "H", "O"),
  rtDev = 30,
  absMzDev = 0.002,
  absMzDevLink = absMzDev * 2,
  extraOpts = NULL,
  traceHack = all(R.Version()[c("major", "minor")] >= c(3, 4))
)

\S4method{generateComponentsRAMClustR}{featureGroups}(
  fGroups,
  st = NULL,
  sr = NULL,
  maxt = 12,
  hmax = 0.3,
  normalize = "TIC",
  ionization,
  absMzDev = 0.002,
  relMzDev = 5,
  minSize = 2,
  relMinReplicates = 0.5,
  RCExperimentVals = list(design = list(platform = "LC-MS"), instrument =
    list(ionization = ionization, MSlevs = 1)),
  extraOptsRC = NULL,
  extraOptsFM = NULL
)
}
\arguments{
\item{fGroups}{\code{\link{featureGroups}} object for which components should
be generated.}

\item{algorithm}{A character string describing the algorithm that should be
used: \code{"ramclustr"}, \code{"camera"}, \code{"nontarget"}, \code{"intclust"}}

\item{...}{Any parameters to be passed to the selected component generation
algorithm.}

\item{ionization}{Which ionization polarity was used to generate the data:
should be \code{"positive"} or \code{"negative"}.}

\item{onlyIsotopes}{Logical value. If \code{TRUE} only isotopes are
considered when generating components (faster). Corresponds to \code{quick}
argument of \code{\link[CAMERA:annotate-methods]{CAMERA::annotate}}.}

\item{minSize}{The minimum size of a component. Smaller components than this
size will be removed. For \code{RAMClustR}: sets the \code{minModuleSize}
argument to \code{\link[RAMClustR]{ramclustR}}. See note below.}

\item{relMinReplicates}{Feature groups within a component are only kept when
they contain data for at least this (relative) amount of replicate
analyses. For instance, \samp{0.5} means that at least half of the
replicates should contain data for a particular feature group in a
component. In this calculation replicates that are fully absent within a
component are not taken in to account. See note below.}

\item{extraOpts}{Named character vector with extra arguments directly passed
to \code{\link{homol.search}} (\code{generateComponentsNontarget}) or
\code{\link[CAMERA:annotate-methods]{CAMERA::annotate}}
(\code{generateComponentsCAMERA}). Set to \code{NULL} to ignore.}

\item{method}{Clustering method that should be applied (passed to
\code{\link{hclust}}).}

\item{metric}{Distance metric used to calculate the distance matrix (passed
to \code{\link{daisy}}).}

\item{normFunc, average}{Passed to
\code{\link[=as.data.table,featureGroups-method]{as.data.table}} to perform
normalization and averaging of data.}

\item{maxTreeHeight, deepSplit, minModuleSize}{Arguments used by
\code{\link{cutreeDynamicTree}}.}

\item{rtRange}{A numeric vector containing the minimum and maximum retention
time (in seconds) between homologues. Series are always considered from low
to high \emph{m/z}, thus, a negative minimum retention time allows
detection of homologous series with increasing \emph{m/z} and decreasing
retention times. These values set the \code{minrt} and \code{maxrt}
arguments of \code{\link{homol.search}}.}

\item{mzRange}{A numeric vector specifying the minimum and maximum \emph{m/z}
increment of a homologous series. Sets the \code{minmz} and \code{maxmz}
arguments of \code{\link{homol.search}}.}

\item{elements}{A character vector with elements to be considered for
detection of repeating units. Sets the \code{elements} argument of
\code{\link{homol.search}} function.}

\item{rtDev, absMzDev, relMzDev}{Maximum deviation for retention time or
  absolute/relative \emph{m/z}.

  For \code{generateComponentsRAMClustR}: Sets the \code{mzabs.error} and
  \code{ppm.error} arguments to \code{\link[RAMClustR]{do.findmain}}.

  For \code{generateComponentsNontarget}: Sets the \code{rttol} and
  \code{mztol} arguments of \code{\link{homol.search}}.}

\item{absMzDevLink}{Maximum absolute \emph{m/z} deviation when linking
series. This should usually be a bit higher than \code{absMzDev} to ensure
proper linkage.}

\item{traceHack}{Currently \code{\link{homol.search}} does not work with \R
\samp{>3.3.3}. This flag, which is enabled by default on these R versions,
implements a (messy) workaround
(\href{https://github.com/blosloos/nontarget/issues/6}{more details here}).}

\item{st, sr, maxt, hmax, normalize}{Arguments to tune the behaviour of feature
group clustering. See their documentation from \code{\link[RAMClustR]{ramclustR}}.
When \code{st} is \code{NULL} it will be automatically calculated as the
half of the median for all chromatographic peak widths.}

\item{RCExperimentVals}{A named \code{list} containing two more \code{list}s:
\code{design} and \code{instrument}. These are used to construct the
\code{ExpDes} argument passed to \code{\link[RAMClustR]{ramclustR}}.}

\item{extraOptsRC, extraOptsFM}{Named \code{list} with further arguments to be
passed to \code{\link[RAMClustR]{ramclustR}} and \code{\link[RAMClustR]{do.findmain}}.
Set to \code{NULL} to ignore.}
}
\value{
A \code{\link{components}} (derived) object containing all generated
  components.
}
\description{
Functionality to automatically group related feature groups (\emph{e.g.}
isotopes, adducts and homologues) to assist and simplify compound annotation.
}
\details{
Several algorithms are provided to group feature groups that are related in
some (chemical) way to each other. These components generally include
adducts, isotopes, in-source fragments and homologues. The linking of this
data is generally useful to provide more information for compound annotation
and reduce the data size and thus complexity.

\code{generateComponents} is a generic function that will generate components
  using one of the supported algorithms. The actual functionality is provided
  by algorithm specific functions such as \code{generateComponentsRAMClustR} and
  \code{generateComponentsNontarget}. While these functions may be called directly,
  \code{generateComponents} provides a generic interface and is therefore usually
  preferred.

\code{generateComponentsCAMERA} provides an interface to
  \href{https://bioconductor.org/packages/release/bioc/html/CAMERA.html}{CAMERA}
   which is used to generate components from known adducts, isotopes and
  in-source fragments. The specified \code{featureGroups} object is
  automatically converted to an \code{\link{xcmsSet}} object using
  \code{\link{getXCMSSet}}.

\code{generateComponentsIntClust} generates components based on
  intensity profiles of feature groups. Hierarchical clustering is performed
  on normalized (and optionally replicate averaged) intensity data and the
  resulting dendrogram is automatically cut with
  \code{\link{cutreeDynamicTree}}. The distance matrix is calculated with
  \code{\link{daisy}} and clustering is performed with \code{\link{hclust}}.
  The clustering of the resulting components can be further visualized and
  modified using the methods defined for \code{\link{componentsIntClust}}.

\code{generateComponentsNontarget} uses
  \href{https://cran.r-project.org/web/packages/nontarget/index.html}{the
  nontarget R package} to generate components by unsupervised detection of
  homologous series. In the first step the \code{\link{homol.search}}
  function is used to detect all homologues within each replicate group
  (analyses within each replicate group are averaged prior to detection).
  Then, homologous series across replicate groups are merged in case of full
  overlap or when merging of partial overlapping series causes no conflicts.

\code{generateComponentsRAMClustR} uses
  \href{https://github.com/cbroeckl/RAMClustR}{RAMClustR} to generate
  components from feature groups which follow similar chromatographic
  retention profiles, but are not necessarily restricted to known rules
  (\emph{e.g.} adducts or isotopes). This method uses the
  \code{\link[RAMClustR]{ramclustR}} functions for generating the components, whereas
  \code{\link[RAMClustR]{do.findmain}} is used for annotation.
}
\note{
For \code{generateComponentsCAMERA} and
  \code{generateComponentsRAMClustR}: the \code{minSize} and
  \code{relMinReplicates} arguments provide additional filtering
  functionality not provided by \pkg{CAMERA} or \pkg{RAMClustR} (except
  \code{minSize}). Note that these filters are enabled by default, hence,
  final results may be different than what CAMERA/RAMClustR normally would
  return.
}
\references{
\addCitations{CAMERA}{1}

\addCitations{nontarget}{1} \cr\cr \addCitations{enviPat}{1}

\insertRef{Broeckling2013}{patRoon} \cr\cr
  \insertRef{Broeckling2014}{patRoon}
}
