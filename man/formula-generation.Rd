% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R, R/formulas.R, R/formulas-bruker.R,
%   R/formulas-genform.R, R/formulas-sirius.R, R/utils-formulas.R
\name{formula-generation}
\alias{formula-generation}
\alias{generateFormulas,featureGroups-method}
\alias{generateFormulas}
\alias{generateFormulasDA,featureGroups-method}
\alias{generateFormulasGenForm,featureGroups-method}
\alias{generateFormulasSIRIUS,featureGroups-method}
\alias{formulaScorings}
\title{Automatic chemical formula generation}
\usage{
\S4method{generateFormulas}{featureGroups}(fGroups, algorithm, ...)

\S4method{generateFormulasDA}{featureGroups}(
  fGroups,
  precursorMzSearchWindow = 0.002,
  MSMode = "both",
  adduct,
  featThreshold = 0.75,
  save = TRUE,
  close = save
)

\S4method{generateFormulasGenForm}{featureGroups}(
  fGroups,
  MSPeakLists,
  relMzDev = 5,
  adduct = "[M+H]+",
  elements = "CHNOP",
  hetero = TRUE,
  oc = FALSE,
  extraOpts = NULL,
  calculateFeatures = TRUE,
  featThreshold = 0.75,
  MSMode = "both",
  isolatePrec = TRUE,
  timeout = 120,
  topMost = 50,
  maxProcAmount = getOption("patRoon.maxProcAmount"),
  batchSize = 8
)

\S4method{generateFormulasSIRIUS}{featureGroups}(
  fGroups,
  MSPeakLists,
  relMzDev = 5,
  adduct = "[M+H]+",
  elements = "CHNOP",
  profile = "qtof",
  database = NULL,
  noise = NULL,
  cores = NULL,
  topMost = 100,
  extraOptsGeneral = NULL,
  extraOptsFormula = NULL,
  calculateFeatures = TRUE,
  featThreshold = 0.75,
  verbose = TRUE,
  SIRBatchSize = 0,
  logPath = file.path("log", "sirius_formulas"),
  maxProcAmount = getOption("patRoon.maxProcAmount")
)

formulaScorings()
}
\arguments{
\item{fGroups}{\code{\link{featureGroups}} object for which formulae should
be generated. This should be the same or a subset of the object that was
used to create the specified \code{MSPeakLists} (only relevant for
algorithms using \code{MSPeakLists}). In the case of a subset only the
remaining feature groups in the subset are considered.}

\item{algorithm}{A character string describing the algorithm that should be
used: \code{"bruker"}, \code{"genform"}, \code{"sirius"}}

\item{...}{Any parameters to be passed to the selected formula generation
algorithm.}

\item{precursorMzSearchWindow}{Search window for \emph{m/z} values (+/- the
feature \emph{m/z}) used to find back feature data of precursor/parent ions
from MS/MS spectra (this data is not readily available from
\command{SmartFormula3D} results).}

\item{MSMode}{Whether formulae should be generated only from MS data
  (\code{"ms"}), MS/MS data (\code{"msms"}) or both (\code{"both"}).

  For \command{GenForm} selecting \code{"both"} will fall back to formula
  calculation with only MS data in case no MS/MS data is available.

  For calulation with Bruker DataAnalysis selecting \code{"both"} will
  calculate formulae from MS data \emph{and} MS/MS data and combines the
  results (duplicated formulae are removed). This is useful when poor MS/MS
  data would exclude proper candidates.}

\item{adduct}{An \code{\link{adduct}} object (or something that can be
converted to it with \code{\link{as.adduct}}). Examples: \code{"[M-H]-"},
\code{"[M+Na]+"}.}

\item{featThreshold}{If \code{calculateFeatures=TRUE}: minimum presence
(\samp{0-1}) of a formula in all features before it is considered as a
candidate for a feature group. For instance, \code{featThreshold} dictates
that a formula should be present in at least 75% of the features inside a
feature group.}

\item{close, save}{If \code{TRUE} then Bruker files are closed and saved after
processing with DataAnalysis, respectively. Setting \code{close=TRUE}
prevents that many analyses might be opened simultaneously in DataAnalysis,
which otherwise may use excessive memory or become slow. By default
\code{save} is \code{TRUE} when \code{close} is \code{TRUE}, which is
likely what you want as otherwise any processed data is lost.}

\item{MSPeakLists}{An \code{\link{MSPeakLists}} object that was generated for
the supplied \code{fGroups}.}

\item{relMzDev}{Maximum relative deviation between the measured and candidate
formula \emph{m/z} values (in ppm). Sets the \option{ppm}
and \option{--ppm-max} commandline options for \command{GenForm} and
\command{SIRIUS}, respectively.}

\item{elements}{Elements to be considered for formulae calculation. This will
heavily affects the number of candidates! Always try to work with a minimal
set by excluding elements you don't expect. For
\code{generateFormulasSIRIUS}, the minimum/maximum number
of elements can also be specified, for example: a value of
\code{"C[5]H[10-15]O"} will only consider formulae with up to five carbon
atoms, between ten and fifteen hydrogen atoms and any amount of oxygen
atoms. Sets the \option{el} and \option{--elements}
commandline options for \command{GenForm} and \command{SIRIUS},
respectively.}

\item{hetero}{Only consider formulae with at least one hetero atom. Sets the
\option{het} commandline option.}

\item{oc}{Only consider organic formulae (\emph{i.e.} with at least one
carbon atom). Sets the \option{oc} commandline option.}

\item{extraOpts}{An optional character vector with any other commandline
options that will be passed to \command{GenForm} or \command{SIRIUS}. See
the \verb{GenForm options} section/SIRIUS manual for all available
commandline options.}

\item{calculateFeatures}{If \code{TRUE} fomulae are first calculated for all
features prior to feature group assignment (see details).}

\item{isolatePrec}{Settings used for isolation of precursor mass peaks and
their isotopes. This isolation is highly important for accurate isotope
scoring of candidates, as non-relevant mass peaks will dramatically
decrease the score. The value of \code{isolatePrec} should either be a
\code{list} with parameters (see the
\code{\link[=filter,MSPeakLists-method]{filter method}} for
\code{MSPeakLists} for more details), \code{TRUE} for default parameters
(the \code{z} parameter is automatically deduced from the \code{adduct}
argument) or \code{FALSE} for no isolation (\emph{e.g.} when you already
performed isolation with the \code{filter} method).}

\item{timeout}{Maximum time (in seconds) that a \command{GenForm} command is
allowed to execute. If this time is exceeded a warning is emitted and the
command is terminated. See the notes section for more information on the
need of timeouts.}

\item{topMost}{Only keep this number of candidates (per feature group) with
highest score. For \command{SIRIUS}: Sets the \option{--candidates}
commandline option.}

\item{maxProcAmount}{Maximum number of processes to run for parallelization.
Usually a number close to the amount of physical cores yields most
efficient results.}

\item{batchSize}{Maximum number of \command{GenForm} commands that should be
run sequentially in each parallel process. Combining commands with short
runtimes (such as \command{GenForm}) can significantly increase parallel
performance. For more information see \code{\link{executeMultiProcess}}.}

\item{profile}{Name of the configuration profile, for example:
\option{"qtof"}, \option{"orbitrap"}, \option{"fticr"}. Sets the
\option{--profile} commandline option.}

\item{database}{If not \code{NULL},
use a database for retrieval of formula candidates. Possible values are:
\option{"pubchem"}, \option{"bio"}, \option{"kegg"}, \option{"hmdb"}. Sets
the \option{--database} commandline option.}

\item{noise}{Median intensity of the noise (\code{NULL} ignores this
parameter). Sets the \option{--noise} commandline option.}

\item{cores}{The number of cores \command{SIRIUS} will use. If \code{NULL}
then the default of all cores will be used.}

\item{extraOptsGeneral, extraOptsFormula}{a \code{character} vector with any
extra commandline parameters for \command{SIRIUS}. For \command{SIRIUS}
versions \code{<4.4} there is no distinction between general and formula
options. Otherwise commandline options specified in \code{extraOptsGeneral}
are added prior to the \code{formula} command, while options specified in
\code{extraOptsFormula} are added in afterwards. See the \command{SIRIUS}
manual for more details. Set to \code{NULL} to ignore.}

\item{verbose}{If \code{TRUE} then more output is shown in the terminal.}

\item{SIRBatchSize}{The maximum number of calculations done by
\command{SIRIUS}. If this number is less than the amount of features to be
calculated then calculations will be evenly split over multiple
\command{SIRIUS} calls (which may be run in parallel if
\command{maxProcAmount>1}). If \code{SIRBatchSize=0} then all feature
calculations are performed from a single \command{SIRIUS} exection, which
is often the fastest.}

\item{logPath}{Destination directory for log files with output from executed
commands. Will be created if non-existant. Set to \code{NULL} to disable
logging.}
}
\value{
A \code{\link{formulas}} object containing all generated formulae.
}
\description{
Functionality to automatically calculate chemical formulae for all feature
groups.
}
\details{
Several algorithms are provided to automatically generate formulae for given
feature groups. All tools use the accurate mass of a feature to
back-calculate candidate formulae. Depending on the algorithm and data
availability, other data such as isotopic pattern and MS/MS fragments may be
used to further improve formula assignment and ranking.

When DataAnalysis is used for formula generation or
\code{calculateFeatures=TRUE} formulae are first calculated for each feature.
The results are then combined for final assignment of candidate formulae for
each feature group. If a formula was found in multiple features within the
group, the reported scorings and mass errors are averaged and other numeric
values are those from the feature in the analysis of the \code{"analysis"}
column. The calculation of formulae on 'feature level' might result in a
more thorough formula search and better removal of outliers (controlled by
\code{featThreshold} argument). In contrast, when calculations occur on
'feature group level' (\emph{i.e.} \code{calculateFeatures=FALSE}), formulae
are directly assigned to each feature group (by using group averaged peak MS
lists), which significantly reduces processing time is, especially with many
analyses. Note that in both situations subsequent algorithms that use formula
data (\emph{e.g.} \code{\link{addFormulaScoring}} and \link{reporting}
functions) only use formula data that was eventually assigned to feature
groups. Furthermore, please note that calculation of formulae with
DataAnalysis always occurs on 'feature level'.

\code{generateFormulas} is a generic function that will generate formulae
  using one of the supported algorithms. The actual functionality is provided
  by algorithm specific functions such as \code{generateFormulasDA} and
  \code{generateFormulasGenForm}. While these functions may be called directly,
  \code{generateFormulas} provides a generic interface and is therefore usually
  preferred.

\code{generateFormulasDA} uses Bruker DataAnalysis to generate
  chemical formulae. This method supports scoring based on overlap between
  measured and theoretical isotopic patterns (both MS and MS/MS data) and the
  presence of 'fitting' MS/MS fragments. The method will iterate through all
  features (or "Compounds" in DataAnalysis terms) and call
  \command{SmartFormula} (and \command{SmartFormula3D} if MS/MS data is
  available) to generate all formulae. Parameters affecting formula
  calculation have to be set in advance within the DataAnalysis method for
  each analysis (\emph{e.g.} by \code{\link{setDAMethod}}). This method
  requires that features were obtained with
  \code{\link{findFeaturesBruker}}. Unlike other algorithms, there is no
  prior need to generate \code{\link[=MSPeakLists]{MS peak lists}}.

\code{generateFormulasGenForm} uses
  \href{https://sourceforge.net/projects/genform/}{GenForm} to generate
  chemical formulae. When MS/MS data is available it will be used to score
  candidate formulae by presence of 'fitting' fragments.

\code{generateFormulasSIRIUS} uses
  \href{https://bio.informatik.uni-jena.de/software/sirius/}{SIRIUS} to
  generate chemical formulae. Similarity of measured and theoretical isotopic
  patterns will be used for scoring candidates. Note that \command{SIRIUS}
  requires availability of MS/MS data.

\code{formulaScorings} returns a \code{data.frame} with information
  on which scoring terms are used and what their algorithm specific name is.
}
\note{
If any errors related to \command{DCOM} appear it might be necessary to
  terminate DataAnalysis (note that DataAnalysis might still be running as a
  background process). The \command{ProcessCleaner} application installed
  with DataAnalayis can be used for this.

\code{generateFormulasGenForm} always sets the \option{exist} and
  \option{oei} \command{GenForm} commandline options.

  Formula calculation with \command{GenForm} may produce an excessive number
  of candidates for high \emph{m/z} values (\emph{e.g.} above 600) and/or
  many elemental combinations (set by \code{elements}). In this scenario
  formula calculation may need a very long time. Timeouts are used to avoid
  excessive computational times by terminating long running commands (set by
  the \code{timeout} argument).

For annotations performed with \command{SIRIUS} it is often the fastest
  to keep the default \code{SIRBatchSize=0}. In this case, the
  \code{maxProcAmount} argument will be ignored and all \command{SIRIUS}
  output will be printed to the terminal (unless \code{verbose=FALSE}).
}
\section{Scorings}{
 Each algorithm implements their own scoring system. Their
  names have been harmonized where possible. An overview is obtained with the
  \code{formulaScorings} function:
  \Sexpr[results=rd,echo=FALSE,stage=build]{patRoon:::tabularRD(patRoon::formulaScorings())}
}

\section{GenForm options}{
 Below is a list of options (generated by running
  \command{GenForm} without commandline options) which can be set by the
  \code{extraOpts} parameter.

 \preformatted{Formula calculation from MS and MS/MS data as described in
Meringer et al (2011) MATCH Commun Math Comput Chem 65: 259-290
Usage: GenForm ms=<filename> [msms=<filename>] [out=<filename>]
        [exist[=mv]] [m=<number>] [ion=-e|+e|-H|+H|+Na] [cha=<number>]
        [ppm=<number>] [msmv=ndp|nsse|nsae] [acc=<number>] [rej=<number>]
        [thms=<number>] [thmsms=<number>] [thcomb=<number>]
        [sort[=ppm|msmv|msmsmv|combmv]] [el=<elements> [oc]] [ff=<fuzzy formula>]
        [vsp[=<even|odd>]] [vsm2mv[=<value>]] [vsm2ap2[=<value>]] [hcf]
        [wm[=lin|sqrt|log]] [wi[=lin|sqrt|log]] [exp=<number>] [oei]
        [dbeexc=<number>] [ivsm2mv=<number>] [vsm2ap2=<number>]
        [oms[=<filename>]] [omsms[=<filename>]] [oclean[=<filename>]]
        [analyze [loss] [intens]] [dbe] [cm] [pc] [sc]
Explanation:
        ms      : filename of MS data (*.txt)
        msms    : filename of MS/MS data (*.txt)
        out     : output generated formulas
        exist   : allow only molecular formulas for that at least one
                  structural formula exists;overrides vsp, vsm2mv, vsm2ap2;
                  argument mv enables multiple valencies for P and S
        m       : experimental molecular mass (default: mass of MS basepeak)
        ion     : type of ion measured (default: M+H)
        ppm     : accuracy of measurement in parts per million (default: 5)
        msmv    : MS match value based on normalized dot product, normalized
                  sum of squared or absolute errors (default: nsae)
        acc     : allowed deviation for full acceptance of MS/MS peak in ppm
                  (default: 2)
        rej     : allowed deviation for total rejection of MS/MS peak in ppm
                  (default: 4)
        thms    : threshold for the MS match value
        thmsms  : threshold for the MS/MS match value
        thcomb  : threshold for the combined match value
        sort    : sort generated formulas according to mass deviation in ppm,
                  MS match value, MS/MS match value or combined match value
        el      : used chemical elements (default: CHBrClFINOPSSi)
        oc      : only organic compounds, i.e. with at least one C atom
        ff      : overwrites el and oc and uses fuzzy formula for limits of
                  element multiplicities
        het     : formulas must have at least one hetero atom
        vsp     : valency sum parity (even for graphical formulas)
        vsm2mv  : lower bound for valency sum - 2 * maximum valency
                  (>=0 for graphical formulas)
        vsm2ap2 : lower bound for valency sum - 2 * number of atoms + 2
                  (>=0 for graphical connected formulas)
        hcf     : apply Heuerding-Clerc filter
        wm      : m/z weighting for MS/MS match value
        wi      : intensity weighting for MS/MS match value
        exp     : exponent used, when wi is set to log
        oei     : allow odd electron ions for explaining MS/MS peaks
        dbeexc  : excess of double bond equivalent for ions
        ivsm2mv : lower bound for valency sum - 2 * maximum valency
                  for fragment ions
        ivsm2ap2: lower bound for valency sum - 2 * number of atoms + 2
                  for fragment ions
        oms     : write scaled MS peaks to output
        omsms   : write weighted MS/MS peaks to output
        oclean  : write explained MS/MS peaks to output
        analyze : write explanations for MS/MS peaks to output
        loss    : for analyzing MS/MS peaks write losses instead of fragments
        intens  : write intensities of MS/MS peaks to output
        dbe     : write double bond equivalents to output
        cm      : write calculated ion masses to output
        pc      : output match values in percent
        sc      : strip calculated isotope distributions
        noref   : hide the reference information
}
}

\references{
\insertRef{Meringer2011}{patRoon}

\insertRef{Dhrkop2019}{patRoon} \cr\cr \insertRef{Duhrkop2015}{patRoon} \cr\cr
  \insertRef{Duhrkop2015-2}{patRoon} \cr\cr \insertRef{Bcker2008}{patRoon}
}
\seealso{
\code{\link{formulas-class}}. The
  \href{https://www.researchgate.net/publication/307964728_MOLGEN-MSMS_Software_User_Manual}{GenForm
   manual} (also known as MOLGEN-MSMS).
}
